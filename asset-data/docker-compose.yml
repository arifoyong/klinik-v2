version: "3.3"

services:
  db:
    container_name: klinik_mysql
    build:
      context: ./DB
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file: ./.env
    environment:
      # MYSQL_USER: ''
      # MYSQL_PASSWORD: ''
      MYSQL_ROOT_PASSWORD: ${MYSQLDB_ROOT_PASSWORD}
    ports:
      - '3336:3306'
    volumes:
      - KLINIK_VOL:/var/lib/mysql

  backend:
    container_name: klinik_backend
    command: npm run dev
    restart: unless-stopped
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: dev
    env_file: ./.env
    environment:
      STATIC_IMG_DIR: ${STATIC_IMG_DIR}
      DB_HOST: ${MYSQLDB_HOST}
      DB_PORT: ${MYSQLDB_DOCKER_PORT}
      DB_USER: ${MYSQLDB_USER}
      DB_PASSWORD: ${MYSQLDB_ROOT_PASSWORD}
      DB_DATABASE: ${MYSQLDB_DB}
      TOKEN_SECRET: ${TOKEN_SECRET}
      FRONTEND: ${NEXT_FRONTEND}
    ports:
      - ${NODE_LOCAL_PORT}:${NODE_DOCKER_PORT}
    depends_on:
      - mysqldb
    volumes:
      - ./backend:/src
      - /src/node_modules

  frontend:
    container_name: klinik_frontend
    build:
      context: ./app
      dockerfile: Dockerfile
      target: dev
      args:
        TOKEN_SECRET: ${TOKEN_SECRET}
        BACKEND_API: ${NEXT_BACKEND_API}
    command: npm run dev
    env_file: ./.env 
    ports:
      - ${NEXT_LOCAL_PORT}:${NEXT_DOCKER_PORT}
    volumes:
      # - ./app/public:/src/public
      - ./app:/src
      - /src/node_modules
volumes:
   KLINIK_VOL:

networks:
  default:
    name: ${NETWORK}
    external: true
