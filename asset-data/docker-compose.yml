version: "3.3"

services:
  mysqldb:
    build:
      context: ./db
      dockerfile: Dockerfile-dev
    restart: unless-stopped
    env_file: ./.env
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQLDB_ROOT_PASSWORD}
    ports:
      - ${MYSQLDB_LOCAL_PORT}:${MYSQLDB_DOCKER_PORT}
    volumes:
      - mydb:/var/lib/mysql

  backend:
    container_name: klinik_backend
    command: npm run dev
    restart: unless-stopped
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: dev
    env_file: ./.env
    environment:
      STATIC_IMG_DIR: ${STATIC_IMG_DIR}
      DB_HOST: mysqldb
      DB_PORT: ${MYSQLDB_DOCKER_PORT}
      DB_USER: ${MYSQLDB_USER}
      DB_PASSWORD: ${MYSQLDB_ROOT_PASSWORD}
      DB_DATABASE: local_db
    ports:
      - ${NODE_LOCAL_PORT}:${NODE_DOCKER_PORT}
    depends_on:
      - mysqldb
    volumes:
      - ./backend:/src
      - /src/node_modules
  
  frontend:
    container_name: klinik_frontend
    build:
      context: ./app
      dockerfile: Dockerfile
      target: dev
    command: npm run dev
    env_file: ./.env
    environment:
      BACKEND_API: ${BACKEND_API}
    ports:
      - ${NEXT_LOCAL_PORT}:${NEXT_DOCKER_PORT}
    volumes:
      - ./app:/src
      - /src/node_modules

volumes: 
  mydb: